/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = true;}PARSER_BEGIN(Projeto)package projeto;

public class Projeto{  public static void main(String args []) throws ParseException  {    Projeto parser = new Projeto(System.in);    while (true)    {      System.out.print("Enter a sentence followed by \";\":");      try      {        switch (Projeto.one_line())        {          case 0 :           System.out.println("Sentence accepted.");          break;             default :           break;        }      }      catch (Exception e)      {        System.out.println("Syntax error.");        System.out.println(e.getMessage());        Projeto.ReInit(System.in);      }      catch (Error e)      {        System.out.println("Lexical error.");        System.out.println(e.getMessage());        break;      }    }  }}PARSER_END(Projeto)SKIP :{  " "| "\r"| "\t"| "\n"}
// operatorsTOKEN : {  < PLUS : "+" >| < MINUS : "-" >
| < MULTIPLY : "*" > | < DIVIDE : "/" > 
| < ARROW : "->" >}

// reserved
TOKEN:
{  < TYPE : "word" | "syll" >
}TOKEN :{
  < WORD : ( < SYLLABLE > )+ < SYLLABLE > >| < SYLLABLE : ( < CONSOANT > )? < CONSOANT > < VOWEL > >| < CONSOANT : ~ [ "a","e","i","o","u","A","E","I","O","U","0"-"9",";"] >
| < VOWEL : [ "a","e","i","o","u","A","E","I","O","U" ] >
| < DIGIT : [ "0"-"9" ] >}int one_line() :
{}
{
	initial()
	{
	  return 0;
	}
}

void initial() :
{}
{
   < SYLLABLE > ( concat() )? ";"
|  < WORD > ( split() )? ";"
|  wordOrSyllable() ( remove() | fill() ) ";"
}

void concat() :
{}
{
	( < PLUS > wordOrSyllable() )+
}

void remove() :
{}
{
	< MINUS > letter()
}

void fill() :
{}
{
	< MULTIPLY > letter()
}

void split() :
{}
{
	< DIVIDE >
}

void wordOrSyllable() :
{}
{
  < TYPE > ( < WORD > | < SYLLABLE > )
}

void letter() :
{}
{
	< CONSOANT > hasDigit()
|   < VOWEL > hasDigit()
}

void hasDigit() :
{}
{
	( < DIGIT > )?
}